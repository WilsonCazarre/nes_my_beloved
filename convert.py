from itertools import islice

def chunk(it, size):
    it = iter(it)
    return iter(lambda: tuple(islice(it, size)), ())

my_str = "$42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $42, $43, $52, $53, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $52, $53, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $42, $43, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53, $52, $53"

hex_values = my_str.split(", ")
chunks = chunk(hex_values, 32)

with open("outfile.txt", "w") as outfile:
    for row in chunks:
        outfile.write(f".byte {", ".join(row)}\n")
